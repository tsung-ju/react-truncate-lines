{"version":3,"file":"component---src-pages-demo-tsx-a842cdc1f641b65b574f.js","mappings":"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","sources":["webpack://react-truncate-lines-docs/../dist/esm/index.js","webpack://react-truncate-lines-docs/./src/pages/demo.tsx"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Children, useEffect, useRef } from \"react\";\nexport function TruncateLines(_a) {\n    var _b = _a.lines, lines = _b === void 0 ? 1 : _b, _c = _a.ellipsis, ellipsis = _c === void 0 ? \"…\" : _c, children = _a.children, rest = __rest(_a, [\"lines\", \"ellipsis\", \"children\"]);\n    var rootSpanRef = useRef(null);\n    var ellipsisSpanRef = useRef(null);\n    var text = onlyText(children);\n    useEffect(function () {\n        var rootSpan = rootSpanRef.current;\n        var ellipsisSpan = ellipsisSpanRef.current;\n        var textNode = rootSpan.firstChild;\n        fixWebKitClientRects(rootSpan);\n        ellipsisSpan.style.display = \"none\";\n        textNode.nodeValue = text;\n        if (rootSpan.getClientRects().length <= lines)\n            return;\n        ellipsisSpan.style.display = \"inline-block\";\n        var newLength = lastIndexWhere(0, text.length, function (length) {\n            textNode.nodeValue = text.slice(0, length);\n            return length === 0 || rootSpan.getClientRects().length <= lines;\n        });\n        textNode.nodeValue = text.slice(0, newLength);\n    }, [lines, ellipsis, text]);\n    return (_jsxs(\"span\", __assign({ ref: rootSpanRef }, rest, { children: [text, _jsx(\"span\", __assign({ ref: ellipsisSpanRef, style: { display: \"none\" } }, { children: ellipsis }))] })));\n}\nfunction lastIndexWhere(start, end, predicate) {\n    // invariant: predicate(start) === true && predicate(end + 1) === false\n    while (start < end) {\n        var mid = start + ((end - start) >> 1);\n        // start <= mid < end\n        if (predicate(mid + 1)) {\n            start = mid + 1;\n        }\n        else {\n            end = mid;\n        }\n    }\n    return start;\n}\nfunction onlyText(children) {\n    var result = \"\";\n    Children.forEach(children, function (child) {\n        if (typeof child === \"number\" || typeof child === \"string\") {\n            result += child.toString();\n        }\n        else {\n            throw new TypeError(\"Unexpected child type\");\n        }\n    });\n    return result;\n}\nfunction fixWebKitClientRects(element) {\n    var s = element.style;\n    var styleValue = s.getPropertyValue(\"outline-style\");\n    var stylePriority = s.getPropertyPriority(\"outline-style\");\n    var widthValue = s.getPropertyValue(\"outline-width\");\n    var widthPriority = s.getPropertyPriority(\"outline-width\");\n    s.setProperty(\"outline-style\", \"solid\", \"important\");\n    s.setProperty(\"outline-width\", \"1px\", \"important\");\n    element.getClientRects();\n    s.setProperty(\"outline-style\", styleValue, stylePriority);\n    s.setProperty(\"outline-width\", widthValue, widthPriority);\n}\n","import React, { useState } from \"react\";\nimport { TruncateLines } from \"react-truncate-lines\";\nimport \"water.css/out/water.css\";\n\nfunction DemoPage() {\n  const [lines, setLines] = useState<number>(3);\n  const [text, setText] = useState<string>(defaultText);\n  const [whiteSpace, setWhiteSpace] =\n    useState<React.CSSProperties[\"whiteSpace\"]>(\"pre-line\");\n  const [lineBreak, setLineBreak] =\n    useState<React.CSSProperties[\"lineBreak\"]>(\"auto\");\n  const [showOutline, setShowOutline] = useState<boolean>(false);\n\n  return (\n    <main>\n      <form autoComplete=\"off\">\n        <label htmlFor=\"lines\">lines</label>\n        <input\n          id=\"lines\"\n          type=\"number\"\n          min=\"1\"\n          value={lines}\n          onChange={(e) => setLines(parseInt(e.target.value))}\n        />\n        <label htmlFor=\"text\">text</label>\n        <textarea\n          id=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <label htmlFor=\"white-space\">white-space</label>\n        <select\n          id=\"white-space\"\n          value={whiteSpace}\n          onChange={(e) =>\n            setWhiteSpace(e.target.value as React.CSSProperties[\"whiteSpace\"])\n          }\n        >\n          <option>normal</option>\n          <option>nowrap</option>\n          <option>pre</option>\n          <option>pre-wrap</option>\n          <option>pre-line</option>\n          <option>break-spaces</option>\n        </select>\n        <label htmlFor=\"line-break\">line-break</label>\n        <select\n          id=\"line-break\"\n          value={lineBreak}\n          onChange={(e) =>\n            setLineBreak(e.target.value as React.CSSProperties[\"lineBreak\"])\n          }\n        >\n          <option>auto</option>\n          <option>loose</option>\n          <option>normal</option>\n          <option>strict</option>\n          <option>anywhere</option>\n        </select>\n        <label htmlFor=\"outline\">outline</label>\n        <input\n          id=\"outline\"\n          type=\"checkbox\"\n          checked={showOutline}\n          onChange={(e) => setShowOutline(e.target.checked)}\n        />\n      </form>\n      <hr />\n      <div style={{ width: \"500px\" }}>\n        <TruncateLines\n          lines={lines}\n          ellipsis={\n            <span\n              style={{ color: \"blue\" }}\n              onClick={() => setLines((lines) => lines + 10)}\n            >\n              ...ReadMore\n            </span>\n          }\n          style={{\n            whiteSpace,\n            lineBreak,\n            outline: showOutline ? \"solid 1px\" : \"initial\",\n          }}\n        >\n          {text}\n        </TruncateLines>\n      </div>\n    </main>\n  );\n}\n\nconst defaultText = `岡部りん太郎さま\nおひさしぶりです｡あまねすずはです｡はしだタイターの娘です｡\nあなたにとっては､つい数時間前以来のことかもしれない｡\n今は西暦二000年の､6月13日です｡これをあなたが読んでいる､大体10年前ということになります｡\n結論だけ書く｡\n失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した\nあたしは失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗したあたしは失敗した失敗\n今は､西暦二000年の､6月14日です｡\nこれをあなたが読んでいる､だいたい9年前､10年前になります｡\n失敗した｡\nあたしがあたしだということを思い出したのはほんの1年前だった\n恐怖の大王が落ちるとか言われてた日\nバカだバカだなにが恐怖の大王だどうせなら落ちてくれればよかった\nあたしはこの24年間､記憶を失っていた｡\n覚えていたのは名前ぐらいだった｡\n\n思い出したのはほんの1年前だった\n恐怖の大王が落ちると言われて落ちなかった日\n恐怖の大王なんてどこにもないけどあたしは死にたい\n修理が完全じゃなかったタイムマシンは不具合があったあたしは1975年に跳んだときはなにも覚えていなかったそれを今になって思い出す\nあたしは真っ白でどうしたらいいか分からず施設に保護された\n今は独り暮らしをしているけれどそれは橋田鈴というまっさらな人間として普通に生活してきただけで阿万音鈴羽としての使命は完全に忘れていて去年思い出した\n失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗した失敗したあたしは失敗\nなにが原因なのタイムトラベルはうまくいかなかった父さんの修理が完全じゃなかったんだ\nでも父さんは悪くないあたしが悪いんだ\nまっすぐな1975年へ跳んでいればよかった2010年に寄り道するべきじゃなかったワガママを言っている場合じゃなかったこれじゃ未来は変わらない\nIBN5100は手に入らなかった\nゴメン｡\nゴメンね｡\nあたしは､なんのためにこの歳まで生まれてきたんだろう｡\n\n使命を忘れて､ただのうのうと生きてきた｡\nこんな人生､なんの意味もない｡\n意味がない｡意味がない｡意味がない｡\n思い出さなければよかった｡\n思い出せてよかった｡\n君に謝ることができてよかった｡\n許して許して許して許して許して許して｡\nあたしの計画は狂ってしまった｡\nその原因を､この1年考え続けていた｡\nそして､分かった｡\nあたしが､1975年へ跳ぶのを1日でもためらわなければ､こんなことにはならなかった｡\n岡部りん太郎｡\n君はあのタイムマシンオフ会の後､1975年へ跳ぼうとしたあたしを引き留めた｡\nそれはとてもうれしかったけど､でもそこで引き留めたのは失敗だったんだ｡\nあたしは､あの日跳ばなければならなかったんだ｡あの日を逃したらダメだったんだ｡\n引き留めたれたから､その夜に雷雨があってタイムマシンが壊れてたんだ｡\n\nもしも､時間を戻せるなら､あの日あたしを､引き留めないようにしてほしい｡\nそうすればあたしは､君たちにIBN5100を届けられる｡\n使命を､果たせる｡\nあたしは､使命をはたしたい｡\n父さんと､約束したから｡\n父さんの､意思だから｡\nあたしの未来を､変えたいから｡\nゴメン｡\nゴメン｡\nゴメン｡\nこんな人生は､無意味だった\n`;\n\nexport default DemoPage;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TruncateLines","_a","_b","lines","_c","ellipsis","children","rest","rootSpanRef","useRef","ellipsisSpanRef","text","result","Children","child","TypeError","toString","onlyText","useEffect","element","styleValue","stylePriority","widthValue","widthPriority","rootSpan","current","ellipsisSpan","textNode","firstChild","style","getPropertyValue","getPropertyPriority","setProperty","getClientRects","display","nodeValue","newLength","start","end","predicate","mid","lastIndexWhere","slice","_jsxs","ref","_jsx","defaultText","useState","setLines","setText","whiteSpace","setWhiteSpace","lineBreak","setLineBreak","showOutline","setShowOutline","React","autoComplete","htmlFor","id","type","min","value","onChange","parseInt","target","checked","width","color","onClick","outline"],"sourceRoot":""}